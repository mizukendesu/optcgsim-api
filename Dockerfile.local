# syntax = docker/dockerfile:1

# ベースイメージとしてRubyを指定（バージョンは必要に応じて変更）
ARG RUBY_VERSION=3.3.5
FROM registry.docker.com/library/ruby:$RUBY_VERSION-slim as base

# Railsアプリケーションの作業ディレクトリを設定
WORKDIR /rails

# 開発環境用の環境変数を設定
ENV RAILS_ENV="development" \
    RACK_ENV="development" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="test:production" \
    BUNDLER_VERSION="2.5.19"

# 必要なパッケージをインストール
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y \
    build-essential \
    default-libmysqlclient-dev \
    git \
    libvips \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Bundlerをインストールし、アプリケーションのGemをインストール
COPY Gemfile Gemfile.lock ./
RUN gem install bundler -v $BUNDLER_VERSION && \
    bundle install

# アプリケーションコードをコピー
COPY . .

# 開発用にデータベースのセットアップやマイグレーションを自動化するエントリポイントスクリプトがあれば、それを使用
# 例えば、bin/docker-entrypointを調整する場合

# 非ルートユーザーを作成
RUN useradd rails --create-home --shell /bin/bash && \
    chown -R rails:rails /rails
USER rails:rails

# エントリポイントを設定
ENTRYPOINT ["/rails/bin/docker-entrypoint"]

# ポートを公開
EXPOSE 3000

# サーバーを起動（コードのホットリロードを有効にするための設定）
CMD ["bin/rails", "server", "-b", "0.0.0.0"]
